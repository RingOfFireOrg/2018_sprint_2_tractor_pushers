/*
# 2018_sprint_2_tractor_pushers
Sprint 2 code

Notes:
-Motor wheel pins: 10,11,12,13
-Grabber pins: 8,9

To-Do List:
-L&R values
-consider reverse turn vs forward turn?
-keyboard run
-check if all headers are in file
-make code for start up, emergency stop
-add for LED commands? (signal activation, what command given, etc.?)
-autonomous?
-check code, test upload
*/

//-------------------------------------------
#include "ServoDriveTrain.h"
#include <time.h>
#include <Servo.h>
#include "ds_interface.h"

//-------------------------------------------

#define SERVO_FWD_R 0 //FWD_R
#define SERVO_REV_R 180 //REV_R

#define SERVO_FWD_L 180 //FWD_L
#define SERVO_REV_L 0 //REV_L

//Need to define turn L&R values here

#define SERVO_STOP 90 //STOP
//-------------------------------------------
//Pin numbers to motors
const int GrabberL=8;
const int GrabberR=9;
const int leftFront_Motor=10;
const int leftBack_Motor=11;
const int rightFront_Motor=12;
const int rightBack_Motor=13:
//-------------------------------------------
//Default setup and functions go here
/**
Notes:
Align grabber motion with L/R motor settings (forward=outward for grabbers)
**/
//add more other variables here
char input = ds.readInputIfAvailable();
char command='';

void commandDirectory(input){
  if(){//grabbers
  
  }
  else if(){//motion
  
  }
  else{//emergency stop, space
  
  }
}


void driveCommand(input){
  char command[]={'s','w','x','a','d'} //stop, front, back, left, right
    switch(input){ //switch to if and elif?? I don't understand the switch() and case this: format
     case stop:
        leftFront_Motor.write(SERVO_FWD_L);
        leftBack_Motor.write(SERVO_FWD_L);
        rightFront_Motor.write(SERVO_FWD_R);
        rightBack_Motor.write(SERVO_FWD_R);
     case forward:
        leftFront_Motor.write(SERVO_FWD_L);
        leftBack_Motor.write(SERVO_FWD_L);
        rightFront_Motor.write(SERVO_FWD_R);
        rightBack_Motor.write(SERVO_FWD_R);
        break;
      case backward:
        leftFront_Motor.write(SERVO_);
        leftBack_Motor.write(SERVO_);
        rightFront_Motor.write(SERVO_);
        rightBack_Motor.write(SERVO_);
        break;
      case right:
        leftFront_Motor.write(SERVO_);
        leftBack_Motor.write(SERVO_);
        rightFront_Motor.write(SERVO_);
        rightBack_Motor.write(SERVO_);
        break;
      case left:
        leftFront_Motor.write(SERVO_);
        leftBack_Motor.write(SERVO_);
        rightFront_Motor.write(SERVO_);
        rightBack_Motor.write(SERVO_);
        break;
      case stop:
        leftFront_Motor.write(SERVO_STOP);
        leftBack_Motor.write(SERVO_STOP);
        rightFront_Motor.write(SERVO_STOP);
        rightBack_Motor.write(SERVO_STOP);
        break;
    }
  }

//-------------------------------------------
void loop(){
  input= ds.readInputIfAvailable();
  driveCommand(input);
  void operateGrabber(){

  }
}
